// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UrlShortenerRecord {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ip      String                @unique
  history UrlShortenerHistory[]
  Note    Note[]
}

model UrlShortenerHistory {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  url                  String
  hash                 String             @unique
  theme                String             @default("default")
  email                String?
  password             String?
  ogTitle              String?
  ogDomain             String?
  ogDescription        String?
  ogImgSrc             String?
  ogImgPublicId        String?
  UrlShortenerRecord   UrlShortenerRecord @relation(fields: [urlShortenerRecordId], references: [id], onDelete: Cascade)
  UrlForwardMeta       UrlForwardMeta[]
  urlShortenerRecordId Int
  Media                Media?
  Note                 Note?
}

model UrlForwardMeta {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  userAgent      String?
  countryCode    String?
  ip             String?
  fromClientSide Boolean? @default(false)

  UrlShortenerHistory   UrlShortenerHistory? @relation(fields: [urlShortenerHistoryId], references: [id], onDelete: Cascade)
  urlShortenerHistoryId Int?

  @@unique([userAgent, ip, urlShortenerHistoryId])
}

model Media {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name       String  @default("No name")
  type       String?
  url        String  @unique
  externalId String? @unique
  provider   String?

  urlShortenerHistoryId Int?                 @unique
  UrlShortenerHistory   UrlShortenerHistory? @relation(fields: [urlShortenerHistoryId], references: [id], onDelete: Cascade)
  noteId                Int?
  Note                  Note?                @relation(fields: [noteId], references: [id], onDelete: Cascade)
}

model Note {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  hash     String  @unique
  uid      String  @unique
  title    String?
  text     String
  email    String?
  password String?
  Media    Media[]

  UrlShortenerRecord   UrlShortenerRecord @relation(fields: [urlShortenerRecordId], references: [id], onDelete: Cascade)
  urlShortenerRecordId Int

  UrlShortenerHistory   UrlShortenerHistory? @relation(fields: [urlShortenerHistoryId], references: [id], onDelete: Cascade)
  urlShortenerHistoryId Int                  @unique
}
